syntax = "proto3";

package p2p;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "deposit.proto";

option go_package = "github.com/hyle-team/tss-svc/internal/p2p";

enum PartyStatus {
  PS_UNKNOWN = 0;
  PS_KEYGEN = 1;
  PS_SIGN = 2;
}

enum RequestType {
  RT_KEYGEN = 0;
  RT_SIGN = 1;
  RT_PROPOSAL = 2;
  RT_ACCEPTANCE = 3;
  RT_SIGN_START = 4;
}

service P2P {
  rpc Status (google.protobuf.Empty) returns (StatusResponse) {}
  rpc Submit (SubmitRequest) returns (google.protobuf.Empty) {}
}

message StatusResponse {
  PartyStatus status = 1;
}

message SubmitRequest {
  string sender = 1;
  string sessionId = 2;
  RequestType type = 3;
  google.protobuf.Any data = 4;
}

message TssData {
  bytes data = 1;
  bool isBroadcast = 2;
}

message SignStartData {
  repeated string parties = 1;
}

message AcceptanceData {
  bool accepted = 1;
}

message EvmProposalData {
  deposit.DepositIdentifier depositId = 1 [(gogoproto.nullable) = false];
  bytes sigData = 2;
}