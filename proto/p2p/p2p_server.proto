syntax = "proto3";

package p2p;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
//import "deposit.proto";

option go_package = "github.com/hyle-team/tss-svc/internal/p2p";

enum PartyStatus {
  UNKNOWN = 0;
  INACTIVE = 1;
  SYNCING = 2;
  KEYGENING = 3;
  SIGNING = 4;
}

enum RequestType {
  KEYGEN = 0;
  ACCEPT = 1;
  SIGN = 2;
  FINALIZE = 3;
  // it could be a separate MsgType but it would clone logic of requests
  ACK = 4;
  NACK = 5;
  NO_DATA_TO_SIGN = 6;
  DATA_TO_SIGN = 7;
  SIGNER_NOTIFY = 8;
  RAW_DATA = 9;
}

service P2P {
  rpc Status (google.protobuf.Empty) returns (StatusResponse) {}
  rpc Submit (SubmitRequest) returns (google.protobuf.Empty) {}
}

message StatusResponse {
  PartyStatus status = 1;
}

message SubmitRequest {
  string sender = 1;
  string sessionId = 2;
  RequestType type = 3;
  google.protobuf.Any data = 4;
}

message TssData {
  bytes data = 1;
  bool isBroadcast = 2;
}